{"version":3,"sources":["Components/Modal/modal.module.css","Components/Button/button.module.css","Components/Searchbar/SearchBar.js","Components/ImageGallery/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","Components/Button/Button.js","Components/Modal/Modal.js","App.js","index.js","Components/Searchbar/searchBar.module.css","Components/ImageGallery/imageGallery.module.css"],"names":["module","exports","SearchBar","state","searchInputValue","formSubmit","e","preventDefault","props","onSubmit","handleInputChange","setState","currentTarget","value","this","className","s","Searchbar","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","onChange","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","pictures","openModal","findLargeImgSrc","onPictureClick","normalizedId","Number","id","shortid","require","map","picture","onClick","src","webformatURL","alt","tags","ImageGalleryItemImage","generate","ImageGallery","Button","fetchForMorePictures","modalRoot","document","querySelector","Modal","handleKeyDown","code","closeModal","handleBackdropClick","target","window","addEventListener","removeEventListener","pictureData","createPortal","Overlay","largeImageURL","KEY","App","status","showModal","largePicture","requiredItem","pageNumber","error","setRequiredItem","setPageNumber","prevState","find","toggleModal","firstFetch","fetch","then","res","json","hits","catch","setStatus","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","color","height","width","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.44c790f8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"modal_Overlay__2pZMn\",\"Modal\":\"modal_Modal__2Nscn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"button_Button__2hEFy\"};","import { Component } from \"react\";\r\nimport s from './searchBar.module.css'\r\n\r\nclass SearchBar extends Component {\r\n\r\n    state = {\r\n        searchInputValue: ''\r\n    };\r\n\r\n    formSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state.searchInputValue);\r\n    };\r\n\r\n    handleInputChange = (e) => {\r\n        this.setState({ searchInputValue: e.currentTarget.value });\r\n    };\r\n\r\n    render() {\r\n        const {searchInputValue}= this.state\r\n        const {formSubmit, handleInputChange} = this\r\n        return (\r\n            <header className={ s.Searchbar }>\r\n                <form className={ s.SearchForm } onSubmit={formSubmit}>\r\n                    <button type=\"submit\" className={ s.SearchFormButton }>\r\n                        <span className={ s.SearchFormButtonLabel }>Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className={ s.SearchFormInput }\r\n                        type=\"text\"\r\n                        value={searchInputValue}\r\n                        onChange={handleInputChange}\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                    />\r\n                </form>\r\n            </header>\r\n        );\r\n    };\r\n};\r\n\r\nexport default SearchBar;","import PropTypes from 'prop-types';\r\nimport s from './imageGallery.module.css'\r\n\r\nconst ImageGalleryItem = ({ pictures, openModal, findLargeImgSrc }) => {\r\n\r\n    const onPictureClick = (e) => {\r\n       const normalizedId = Number(e.currentTarget.id)\r\n       findLargeImgSrc(normalizedId);\r\n       openModal();\r\n    }\r\n    const shortid = require('shortid');\r\n    return (pictures.map(picture =>\r\n        <li key={shortid.generate()} className={s.ImageGalleryItem} id={picture.id} onClick={onPictureClick}>\r\n            <img src={picture.webformatURL} alt={picture.tags} className={s.ImageGalleryItemImage} />\r\n        </li>));\r\n};\r\nexport default ImageGalleryItem\r\n\r\nImageGalleryItem.propTypes = {\r\n    pictures: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        webformatURL: PropTypes.string.isRequired,\r\n        tags: PropTypes.string,\r\n        })).isRequired,\r\n    openModal: PropTypes.func.isRequired,\r\n    findLargeImgSrc:PropTypes.func.isRequired,\r\n}","import PropTypes, { object } from 'prop-types';\r\nimport ImageGalleryItem from './ImageGalleryItem'\r\nimport s from './imageGallery.module.css'\r\n\r\nconst ImageGallery = ({pictures, openModal, findLargeImgSrc}) => {\r\n        return (\r\n            <ul className={s.ImageGallery}>\r\n                <ImageGalleryItem pictures={ pictures } openModal={ openModal } findLargeImgSrc={findLargeImgSrc }/>\r\n            </ul>\r\n        );\r\n};\r\n\r\nexport default ImageGallery;\r\n\r\nImageGallery.propTypes = {\r\n    pictures: PropTypes.arrayOf(object).isRequired,\r\n    openModal: PropTypes.func.isRequired,\r\n    findLargeImgSrc:PropTypes.func.isRequired,\r\n}","import s from './button.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Button = ({ fetchForMorePictures }) => {\r\n\r\n    const onBtnClick = () => {\r\n        fetchForMorePictures();\r\n    };\r\n    \r\n    return (\r\n        <button type='button' className={s.Button} onClick={onBtnClick}>Load more</button>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  fetchForMorePictures: PropTypes.func.isRequired,\r\n  \r\n};","import { Component } from 'react'\r\nimport { createPortal } from 'react-dom'\r\nimport s from './modal.module.css'\r\n\r\nconst modalRoot = document.querySelector('#modal-root')\r\n\r\nclass Modal extends Component {\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyDown);\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyDown)\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        if (e.code === 'Escape') {\r\n            this.props.closeModal()\r\n        };\r\n    };\r\n\r\n    handleBackdropClick = (e) => {\r\n        if (e.target === e.currentTarget) {\r\n            this.props.closeModal()\r\n        };\r\n    };\r\n\r\n  \r\n    render() {\r\n        const { pictureData } = this.props\r\n    return createPortal(\r\n        <div className={s.Overlay} onClick={this.handleBackdropClick}>\r\n            <div className={s.Modal}>\r\n                <img src={pictureData.largeImageURL} alt={pictureData.tags} />\r\n            </div>\r\n        </div>, modalRoot);\r\n    };\r\n    \r\n};\r\n\r\nexport default Modal","import { Component } from 'react';\nimport Loader from \"react-loader-spinner\";\nimport './App.css';\nimport SearchBar from './Components/Searchbar/SearchBar';\nimport ImageGallery from './Components/ImageGallery/ImageGallery';\nimport Button from './Components/Button/Button';\nimport Modal from './Components/Modal/Modal'\n\nconst KEY = '23129863-59f8a41eed57593cb3097b5c2'\n\nclass App extends Component {\n  state = {\n    pictures: null,\n    status: 'idle',\n    showModal: false,\n    largePicture: null,\n    requiredItem: '',\n    pageNumber: 2,\n    error: null\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.pictures !== this.state.pictures) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    };\n  };\n\n  setStatus(status) {\n    this.setState({ status });\n  };\n\n  setRequiredItem = (requiredItem) => {\n    this.setState({ requiredItem });\n  };\n\n  setPageNumber = () => {\n    this.setState(prevState => ({ pageNumber: prevState.pageNumber + 1 }));\n  };\n\n  findLargeImgSrc = (id) => {\n    const picture = this.state.pictures.find(picture => picture.id === id);\n    this.setState({ largePicture: picture });\n  };\n\n  toggleModal = () => {\n    this.setState(prevState => ({\n      showModal: !prevState.showModal\n    }));\n  };\n\n  firstFetch = (requiredItem) => {\n    fetch(`https://pixabay.com/api/?q=${requiredItem}&page=1&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`)\n      .then(res => res.json())\n      .then(pictures => this.setState({ pictures: pictures.hits, status: 'resolved' }))\n      .catch(error => this.setState({ error, status: 'rejected' }));\n  };\n\n  fetchForMorePictures = () => {\n    this.setStatus('pending')\n    fetch(`https://pixabay.com/api/?q=${this.state.requiredItem}&page=${this.state.pageNumber}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`)\n      .then(res => res.json())\n      .then(pictures => this.setState(prevState => ({\n        pictures: [...prevState.pictures, ...pictures.hits],\n        status: 'resolved'\n      })))\n      .catch(error => this.setState({error, status: 'rejected'}));\n    this.setPageNumber();\n  };\n\n  onSubmit = (requiredItem) => {\n    this.setRequiredItem(requiredItem);\n    this.firstFetch(requiredItem);\n  };\n\n  render() {\n\n    const { status, pictures, showModal, largePicture, error } = this.state\n    const { onSubmit, toggleModal, findLargeImgSrc, fetchForMorePictures} = this\n\n    if (status === 'idle') {\n      return (<div className='container'>\n        <SearchBar onSubmit={onSubmit} />\n      </div>);\n    };\n\n    if (status === 'pending') {\n      return (\n        <div className='container'>\n          <SearchBar onSubmit={onSubmit} />\n          <ImageGallery pictures={pictures} openModal={toggleModal} findLargeImgSrc={findLargeImgSrc} />\n          <div className='loader'>\n            <Loader type=\"ThreeDots\" color=\"#3f51b5\" height={80} width={80} />\n          </div>\n        </div>\n      );\n    };\n\n    if (status === 'resolved') {\n      return (\n        <div className='container'>\n          <SearchBar onSubmit={onSubmit} />\n          {<ImageGallery pictures={pictures} openModal={toggleModal} findLargeImgSrc={findLargeImgSrc} />}\n          {<Button fetchForMorePictures={fetchForMorePictures} />}\n          {showModal && <Modal closeModal={toggleModal} pictureData={largePicture} />}\n        </div>\n        \n      );\n    };\n\n    if (status === 'rejected') {\n      return (<div className='container'>\n        <SearchBar onSubmit={onSubmit} />\n        <h1>Warning: { error }</h1>\n      </div>);\n    };\n  };\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"searchBar_Searchbar__1CT8p\",\"SearchForm\":\"searchBar_SearchForm__12HEv\",\"SearchFormButton\":\"searchBar_SearchFormButton__XMKPv\",\"SearchFormButtonLabel\":\"searchBar_SearchFormButtonLabel__3OJkF\",\"SearchFormInput\":\"searchBar_SearchFormInput__3eRbX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"imageGallery_ImageGallery__2zUSl\",\"ImageGalleryItem\":\"imageGallery_ImageGalleryItem__2OEkA\",\"ImageGalleryItemImage\":\"imageGallery_ImageGalleryItemImage__1NTQo\"};"],"sourceRoot":""}